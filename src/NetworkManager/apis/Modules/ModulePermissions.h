#ifndef MODULEPERMISSIONS_H
#define MODULEPERMISSIONS_H

#include "../../../Context.h"

class ModulePermissions
{
public:
    static const String BUTTON_CREATE;
    static const String BUTTON_UPDATE;
    static const String BUTTON_DELETE;
    static const String BUTTON_GET;
    static const String MODULE_CREATE;
    static const String MODULE_UPDATE;
    static const String MODULE_DELETE;
    static const String MODULE_GET;
    static const String RELAY_CREATE;
    static const String RELAY_UPDATE;
    static const String RELAY_DELETE;
    static const String RELAY_GET;
    static const String LCD_CREATE;
    static const String LCD_UPDATE;
    static const String LCD_DELETE;
    static const String LCD_GET;
    static const String DHT_CREATE;
    static const String DHT_UPDATE;
    static const String DHT_DELETE;
    static const String DHT_GET;
    static const String PHOTORESISTOR_CREATE;
    static const String PHOTORESISTOR_UPDATE;
    static const String PHOTORESISTOR_DELETE;
    static const String PHOTORESISTOR_GET;
    static const String RGB_CREATE;
    static const String RGB_UPDATE;
    static const String RGB_DELETE;
    static const String RGB_GET;
    static const String SOILMOISTURE_CREATE;
    static const String SOILMOISTURE_UPDATE;
    static const String SOILMOISTURE_DELETE;
    static const String SOILMOISTURE_GET;
    static const String RFID_CREATE;
    static const String RFID_UPDATE;
    static const String RFID_DELETE;
    static const String RFID_GET;
    static const String DEVICES_CREATE;
    static const String DEVICES_UPDATE;
    static const String DEVICES_DELETE;
    static const String DEVICES_GET;
    static const String RELAYCONTROLLER_TURN_ON;
    static const String RELAYCONTROLLER_TURN_ON_AFTER_DELAY;
    static const String RELAYCONTROLLER_TURN_OFF;
    static const String RELAYCONTROLLER_TURN_OFF_AFTER_DELAY;
    static const String RELAYCONTROLLER_GET_STATE;
    static const String RELAYCONTROLLER_SET_NORMALLY_OPEN;
    static const String RELAYCONTROLLER_GET_NORMALLY_OPEN;
    static const String RELAYCONTROLLER_SET_PIN_NUMBER;
    static const String RELAYCONTROLLER_GET_PIN_NUMBER;
    static const String RELAYCONTROLLER_GET_ENTITY;
    static const String BUTTONCONTROLLER_SETDEBOUNCEDELAY;
    static const String BUTTONCONTROLLER_SETLONGPRESSTIME;
    static const String BUTTONCONTROLLER_GETSTATE;
    static const String BUTTONCONTROLLER_GETNAME;
    static const String BUTTONCONTROLLER_GETENTITY;
    static const String BUTTONCONTROLLER_GETPINNUMBER;
    static const String BUTTONCONTROLLER_GETACTIVEHIGH;
    static const String BUTTONCONTROLLER_GETPULLUPACTIVE;
    static const String DHTSENSORCONTROLLER_GETNAME;
    static const String DHTSENSORCONTROLLER_GETHUMIDITY;
    static const String DHTSENSORCONTROLLER_GETTEMPERATUREC;
    static const String DHTSENSORCONTROLLER_GETTEMPERATUREF;
    static const String DHTSENSORCONTROLLER_ISDATAVALID;
    static const String DHTSENSORCONTROLLER_GETENTITY;
    static const String LCD16X2CONTROLLER_DRAWTEXT;
    static const String LCD16X2CONTROLLER_CLEAN;
    static const String LCD16X2CONTROLLER_GETENTITY;
    static const String OLEDLCDCONTROLLER_PRINT;
    static const String OLEDLCDCONTROLLER_PRINTAT;
    static const String OLEDLCDCONTROLLER_DRAWTEXT;
    static const String OLEDLCDCONTROLLER_CLEAN;
    static const String OLEDLCDCONTROLLER_GETENTITY;
    static const String SOILMOISTURESENSORCONTROLLER_READMOISTURE;
    static const String SOILMOISTURESENSORCONTROLLER_ISDRY;
    static const String SOILMOISTURESENSORCONTROLLER_ISWET;
    static const String SOILMOISTURESENSORCONTROLLER_GETENTITY;


    static void addModulePermissions(Context* context);
};

void ModulePermissions::addModulePermissions(Context* context)
{
    context->getSecurity()->addPermissionForAdmin(BUTTON_CREATE, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(BUTTON_UPDATE, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(BUTTON_DELETE, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(BUTTON_GET, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(MODULE_CREATE, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(MODULE_UPDATE, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(MODULE_DELETE, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(MODULE_GET, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(RELAY_CREATE, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(RELAY_UPDATE, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(RELAY_DELETE, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(RELAY_GET, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(LCD_CREATE, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(LCD_UPDATE, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(LCD_DELETE, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(LCD_GET, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(DHT_CREATE, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(DHT_UPDATE, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(DHT_DELETE, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(DHT_GET, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(PHOTORESISTOR_CREATE, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(PHOTORESISTOR_UPDATE, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(PHOTORESISTOR_DELETE, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(PHOTORESISTOR_GET, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(RGB_CREATE, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(RGB_UPDATE, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(RGB_DELETE, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(RGB_GET, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(SOILMOISTURE_CREATE, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(SOILMOISTURE_UPDATE, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(SOILMOISTURE_DELETE, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(SOILMOISTURE_GET, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(RFID_CREATE, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(RFID_UPDATE, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(RFID_DELETE, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(RFID_GET, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(DEVICES_CREATE, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(DEVICES_UPDATE, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(DEVICES_DELETE, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(DEVICES_GET, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(RELAYCONTROLLER_TURN_ON, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(RELAYCONTROLLER_TURN_ON_AFTER_DELAY, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(RELAYCONTROLLER_TURN_OFF, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(RELAYCONTROLLER_TURN_OFF_AFTER_DELAY, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(RELAYCONTROLLER_GET_STATE, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(RELAYCONTROLLER_SET_NORMALLY_OPEN, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(RELAYCONTROLLER_GET_NORMALLY_OPEN, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(RELAYCONTROLLER_SET_PIN_NUMBER, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(RELAYCONTROLLER_GET_PIN_NUMBER, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(RELAYCONTROLLER_GET_ENTITY, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(BUTTONCONTROLLER_SETDEBOUNCEDELAY, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(BUTTONCONTROLLER_SETLONGPRESSTIME, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(BUTTONCONTROLLER_GETSTATE, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(BUTTONCONTROLLER_GETNAME, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(BUTTONCONTROLLER_GETENTITY, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(BUTTONCONTROLLER_GETPINNUMBER, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(BUTTONCONTROLLER_GETACTIVEHIGH, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(BUTTONCONTROLLER_GETPULLUPACTIVE, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(DHTSENSORCONTROLLER_GETNAME, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(DHTSENSORCONTROLLER_GETHUMIDITY, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(DHTSENSORCONTROLLER_GETTEMPERATUREC, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(DHTSENSORCONTROLLER_GETTEMPERATUREF, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(DHTSENSORCONTROLLER_ISDATAVALID, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(DHTSENSORCONTROLLER_GETENTITY, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(LCD16X2CONTROLLER_DRAWTEXT, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(LCD16X2CONTROLLER_CLEAN, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(LCD16X2CONTROLLER_GETENTITY, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(OLEDLCDCONTROLLER_PRINT, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(OLEDLCDCONTROLLER_PRINTAT, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(OLEDLCDCONTROLLER_DRAWTEXT, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(OLEDLCDCONTROLLER_CLEAN, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(OLEDLCDCONTROLLER_GETENTITY, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(SOILMOISTURESENSORCONTROLLER_READMOISTURE, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(SOILMOISTURESENSORCONTROLLER_ISDRY, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(SOILMOISTURESENSORCONTROLLER_ISWET, "ModuleApis ModulePermissions");
    context->getSecurity()->addPermissionForAdmin(SOILMOISTURESENSORCONTROLLER_GETENTITY, "ModuleApis ModulePermissions");

}

const String ModulePermissions::BUTTON_CREATE = "button_create";
const String ModulePermissions::BUTTON_UPDATE = "button_update";
const String ModulePermissions::BUTTON_DELETE = "button_delete";
const String ModulePermissions::BUTTON_GET = "button_get";
const String ModulePermissions::MODULE_CREATE = "module_create";
const String ModulePermissions::MODULE_UPDATE = "module_update";
const String ModulePermissions::MODULE_DELETE = "module_delete";
const String ModulePermissions::MODULE_GET = "module_get";
const String ModulePermissions::RELAY_CREATE = "relay_create";
const String ModulePermissions::RELAY_UPDATE = "relay_update";
const String ModulePermissions::RELAY_DELETE = "relay_delete";
const String ModulePermissions::RELAY_GET = "relay_get";
const String ModulePermissions::LCD_CREATE = "lcd_create";
const String ModulePermissions::LCD_UPDATE = "lcd_update";
const String ModulePermissions::LCD_DELETE = "lcd_delete";
const String ModulePermissions::LCD_GET = "lcd_get";
const String ModulePermissions::DHT_CREATE = "dht_create";
const String ModulePermissions::DHT_UPDATE = "dht_update";
const String ModulePermissions::DHT_DELETE = "dht_delete";
const String ModulePermissions::DHT_GET = "dht_get";
const String ModulePermissions::PHOTORESISTOR_CREATE = "photoresistor_create";
const String ModulePermissions::PHOTORESISTOR_UPDATE = "photoresistor_update";
const String ModulePermissions::PHOTORESISTOR_DELETE = "photoresistor_delete";
const String ModulePermissions::PHOTORESISTOR_GET = "photoresistor_get";
const String ModulePermissions::RGB_CREATE = "rgb_create";
const String ModulePermissions::RGB_UPDATE = "rgb_update";
const String ModulePermissions::RGB_DELETE = "rgb_delete";
const String ModulePermissions::RGB_GET = "rgb_get";
const String ModulePermissions::SOILMOISTURE_CREATE = "soilmoisture_create";
const String ModulePermissions::SOILMOISTURE_UPDATE = "soilmoisture_update";
const String ModulePermissions::SOILMOISTURE_DELETE = "soilmoisture_delete";
const String ModulePermissions::SOILMOISTURE_GET = "soilmoisture_get";
const String ModulePermissions::RFID_CREATE = "rfid_create";
const String ModulePermissions::RFID_UPDATE = "rfid_update";
const String ModulePermissions::RFID_DELETE = "rfid_delete";
const String ModulePermissions::RFID_GET = "rfid_get";
const String ModulePermissions::DEVICES_CREATE = "devices_create";
const String ModulePermissions::DEVICES_UPDATE = "devices_update";
const String ModulePermissions::DEVICES_DELETE = "devices_delete";
const String ModulePermissions::DEVICES_GET = "devices_get";
const String ModulePermissions::RELAYCONTROLLER_TURN_ON = "relaycontroller_turn_on";
const String ModulePermissions::RELAYCONTROLLER_TURN_ON_AFTER_DELAY = "relaycontroller_turn_on_after_delay";
const String ModulePermissions::RELAYCONTROLLER_TURN_OFF = "relaycontroller_turn_off";
const String ModulePermissions::RELAYCONTROLLER_TURN_OFF_AFTER_DELAY = "relaycontroller_turn_off_after_delay";
const String ModulePermissions::RELAYCONTROLLER_GET_STATE = "relaycontroller_get_state";
const String ModulePermissions::RELAYCONTROLLER_SET_NORMALLY_OPEN = "relaycontroller_set_normally_open";
const String ModulePermissions::RELAYCONTROLLER_GET_NORMALLY_OPEN = "relaycontroller_get_normally_open";
const String ModulePermissions::RELAYCONTROLLER_SET_PIN_NUMBER = "relaycontroller_set_pin_number";
const String ModulePermissions::RELAYCONTROLLER_GET_PIN_NUMBER = "relaycontroller_get_pin_number";
const String ModulePermissions::RELAYCONTROLLER_GET_ENTITY = "relaycontroller_get_entity";
const String ModulePermissions::BUTTONCONTROLLER_SETDEBOUNCEDELAY = "buttoncontroller_setdebouncedelay";
const String ModulePermissions::BUTTONCONTROLLER_SETLONGPRESSTIME = "buttoncontroller_setlongpresstime";
const String ModulePermissions::BUTTONCONTROLLER_GETSTATE = "buttoncontroller_getstate";
const String ModulePermissions::BUTTONCONTROLLER_GETNAME = "buttoncontroller_getname";
const String ModulePermissions::BUTTONCONTROLLER_GETENTITY = "buttoncontroller_getentity";
const String ModulePermissions::BUTTONCONTROLLER_GETPINNUMBER = "buttoncontroller_getpinnumber";
const String ModulePermissions::BUTTONCONTROLLER_GETACTIVEHIGH = "buttoncontroller_getactivehigh";
const String ModulePermissions::BUTTONCONTROLLER_GETPULLUPACTIVE = "buttoncontroller_getpullupactive";
const String ModulePermissions::DHTSENSORCONTROLLER_GETNAME = "dhtsensorcontroller_getname";
const String ModulePermissions::DHTSENSORCONTROLLER_GETHUMIDITY = "dhtsensorcontroller_gethumidity";
const String ModulePermissions::DHTSENSORCONTROLLER_GETTEMPERATUREC = "dhtsensorcontroller_gettemperaturec";
const String ModulePermissions::DHTSENSORCONTROLLER_GETTEMPERATUREF = "dhtsensorcontroller_gettemperaturef";
const String ModulePermissions::DHTSENSORCONTROLLER_ISDATAVALID = "dhtsensorcontroller_isdatavalid";
const String ModulePermissions::DHTSENSORCONTROLLER_GETENTITY = "dhtsensorcontroller_getentity";
const String ModulePermissions::LCD16X2CONTROLLER_DRAWTEXT = "lcd16x2controller_drawtext";
const String ModulePermissions::LCD16X2CONTROLLER_CLEAN = "lcd16x2controller_clean";
const String ModulePermissions::LCD16X2CONTROLLER_GETENTITY = "lcd16x2controller_getentity";
const String ModulePermissions::OLEDLCDCONTROLLER_PRINT = "oledlcdcontroller_print";
const String ModulePermissions::OLEDLCDCONTROLLER_PRINTAT = "oledlcdcontroller_printat";
const String ModulePermissions::OLEDLCDCONTROLLER_DRAWTEXT = "oledlcdcontroller_drawtext";
const String ModulePermissions::OLEDLCDCONTROLLER_CLEAN = "oledlcdcontroller_clean";
const String ModulePermissions::OLEDLCDCONTROLLER_GETENTITY = "oledlcdcontroller_getentity";
const String ModulePermissions::SOILMOISTURESENSORCONTROLLER_READMOISTURE = "soilmoisturesensorcontroller_readmoisture";
const String ModulePermissions::SOILMOISTURESENSORCONTROLLER_ISDRY = "soilmoisturesensorcontroller_isdry";
const String ModulePermissions::SOILMOISTURESENSORCONTROLLER_ISWET = "soilmoisturesensorcontroller_iswet";
const String ModulePermissions::SOILMOISTURESENSORCONTROLLER_GETENTITY = "soilmoisturesensorcontroller_getentity";


#endif // PERMISSIONS_H
